// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace LykkeAutomationPrivate.Models.Registration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AuthenticateResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the AuthenticateResponseModel class.
        /// </summary>
        public AuthenticateResponseModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuthenticateResponseModel class.
        /// </summary>
        /// <param name="status">Possible values include: 'Ok', 'Error'</param>
        public AuthenticateResponseModel(AuthenticationStatus status, string errorMessage = default(string), string notificationsId = default(string), string token = default(string), ClientAccountInformationModel account = default(ClientAccountInformationModel))
        {
            Status = status;
            ErrorMessage = errorMessage;
            NotificationsId = notificationsId;
            Token = token;
            Account = account;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Ok', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public AuthenticationStatus Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ErrorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NotificationsId")]
        public string NotificationsId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Token")]
        public string Token { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account")]
        public ClientAccountInformationModel Account { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Account != null)
            {
                Account.Validate();
            }
        }
    }
}
