// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace LykkeAutomationPrivate.Models.Registration.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ClientAccountInformationModel
    {
        /// <summary>
        /// Initializes a new instance of the ClientAccountInformationModel
        /// class.
        /// </summary>
        public ClientAccountInformationModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ClientAccountInformationModel
        /// class.
        /// </summary>
        public ClientAccountInformationModel(System.DateTime registered, bool isReviewAccount, bool isTrusted, string id = default(string), string email = default(string), string phone = default(string), string pin = default(string), string notificationsId = default(string), string partnerId = default(string))
        {
            Id = id;
            Registered = registered;
            Email = email;
            Phone = phone;
            Pin = pin;
            NotificationsId = notificationsId;
            PartnerId = partnerId;
            IsReviewAccount = isReviewAccount;
            IsTrusted = isTrusted;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Registered")]
        public System.DateTime Registered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Phone")]
        public string Phone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Pin")]
        public string Pin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NotificationsId")]
        public string NotificationsId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PartnerId")]
        public string PartnerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsReviewAccount")]
        public bool IsReviewAccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsTrusted")]
        public bool IsTrusted { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
