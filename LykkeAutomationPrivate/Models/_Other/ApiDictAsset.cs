// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ApiDictAsset
    {
        /// <summary>
        /// Initializes a new instance of the ApiDictAsset class.
        /// </summary>
        public ApiDictAsset()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiDictAsset class.
        /// </summary>
        /// <param name="assetType">Possible values include:
        /// 'Erc20Token'</param>
        /// <param name="blockchain">Possible values include: 'None',
        /// 'Bitcoin', 'Ethereum'</param>
        public ApiDictAsset(string id = default(string), string blockchainId = default(string), string name = default(string), string symbol = default(string), string idIssuer = default(string), int? accuracy = default(int?), bool? hideWithdraw = default(bool?), bool? hideDeposit = default(bool?), int? defaultOrder = default(int?), bool? kycNeeded = default(bool?), string categoryId = default(string), bool? visaDeposit = default(bool?), bool? swiftDeposit = default(bool?), bool? blockchainDeposit = default(bool?), bool? buyScreen = default(bool?), bool? sellScreen = default(bool?), bool? blockchainWithdrawal = default(bool?), bool? swiftWithdrawal = default(bool?), bool? forwardWithdrawal = default(bool?), bool? crosschainWithdrawal = default(bool?), string bcnDepositAddress = default(string), string forwardBaseAsset = default(string), int? forwardFrozenDays = default(int?), string forwardMemoUrl = default(string), string assetType = default(string), string iconUrl = default(string), string displayId = default(string), string blockchain = default(string), AssetDescriptionModel description = default(AssetDescriptionModel))
        {
            Id = id;
            BlockchainId = blockchainId;
            Name = name;
            Symbol = symbol;
            IdIssuer = idIssuer;
            Accuracy = accuracy;
            HideWithdraw = hideWithdraw;
            HideDeposit = hideDeposit;
            DefaultOrder = defaultOrder;
            KycNeeded = kycNeeded;
            CategoryId = categoryId;
            VisaDeposit = visaDeposit;
            SwiftDeposit = swiftDeposit;
            BlockchainDeposit = blockchainDeposit;
            BuyScreen = buyScreen;
            SellScreen = sellScreen;
            BlockchainWithdrawal = blockchainWithdrawal;
            SwiftWithdrawal = swiftWithdrawal;
            ForwardWithdrawal = forwardWithdrawal;
            CrosschainWithdrawal = crosschainWithdrawal;
            BcnDepositAddress = bcnDepositAddress;
            ForwardBaseAsset = forwardBaseAsset;
            ForwardFrozenDays = forwardFrozenDays;
            ForwardMemoUrl = forwardMemoUrl;
            AssetType = assetType;
            IconUrl = iconUrl;
            DisplayId = displayId;
            Blockchain = blockchain;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainId")]
        public string BlockchainId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdIssuer")]
        public string IdIssuer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Accuracy")]
        public int? Accuracy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HideWithdraw")]
        public bool? HideWithdraw { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HideDeposit")]
        public bool? HideDeposit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultOrder")]
        public int? DefaultOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "KycNeeded")]
        public bool? KycNeeded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CategoryId")]
        public string CategoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VisaDeposit")]
        public bool? VisaDeposit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SwiftDeposit")]
        public bool? SwiftDeposit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainDeposit")]
        public bool? BlockchainDeposit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BuyScreen")]
        public bool? BuyScreen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SellScreen")]
        public bool? SellScreen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainWithdrawal")]
        public bool? BlockchainWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SwiftWithdrawal")]
        public bool? SwiftWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardWithdrawal")]
        public bool? ForwardWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CrosschainWithdrawal")]
        public bool? CrosschainWithdrawal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BcnDepositAddress")]
        public string BcnDepositAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardBaseAsset")]
        public string ForwardBaseAsset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardFrozenDays")]
        public int? ForwardFrozenDays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ForwardMemoUrl")]
        public string ForwardMemoUrl { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Erc20Token'
        /// </summary>
        [JsonProperty(PropertyName = "AssetType")]
        public string AssetType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IconUrl")]
        public string IconUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayId")]
        public string DisplayId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Bitcoin', 'Ethereum'
        /// </summary>
        [JsonProperty(PropertyName = "Blockchain")]
        public string Blockchain { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public AssetDescriptionModel Description { get; set; }

    }
}
