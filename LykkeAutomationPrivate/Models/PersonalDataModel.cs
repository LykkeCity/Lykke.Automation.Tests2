// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PersonalDataModel
    {
        /// <summary>
        /// Initializes a new instance of the PersonalDataModel class.
        /// </summary>
        public PersonalDataModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersonalDataModel class.
        /// </summary>
        public PersonalDataModel(System.DateTime? regitered = default(System.DateTime?), string id = default(string), string email = default(string), string fullName = default(string), string firstName = default(string), string lastName = default(string), System.DateTime? dateOfBirth = default(System.DateTime?), System.DateTime? dateOfExpiryOfID = default(System.DateTime?), string countryFromID = default(string), string country = default(string), string countryFromPOA = default(string), string zip = default(string), string city = default(string), string address = default(string), string contactPhone = default(string), string referralCode = default(string), string spotRegulator = default(string), string marginRegulator = default(string), string paymentSystem = default(string), string isp = default(string), System.DateTime? dateOfPoaDocument = default(System.DateTime?), string avatar = default(string), string website = default(string), string shortBio = default(string), string facebook = default(string), string twitter = default(string), string github = default(string))
        {
            Regitered = regitered;
            Id = id;
            Email = email;
            FullName = fullName;
            FirstName = firstName;
            LastName = lastName;
            DateOfBirth = dateOfBirth;
            DateOfExpiryOfID = dateOfExpiryOfID;
            CountryFromID = countryFromID;
            Country = country;
            CountryFromPOA = countryFromPOA;
            Zip = zip;
            City = city;
            Address = address;
            ContactPhone = contactPhone;
            ReferralCode = referralCode;
            SpotRegulator = spotRegulator;
            MarginRegulator = marginRegulator;
            PaymentSystem = paymentSystem;
            Isp = isp;
            DateOfPoaDocument = dateOfPoaDocument;
            Avatar = avatar;
            Website = website;
            ShortBio = shortBio;
            Facebook = facebook;
            Twitter = twitter;
            Github = github;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Regitered")]
        public System.DateTime? Regitered { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FullName")]
        public string FullName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FirstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastName")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfExpiryOfID")]
        public System.DateTime? DateOfExpiryOfID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryFromID")]
        public string CountryFromID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryFromPOA")]
        public string CountryFromPOA { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Zip")]
        public string Zip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "City")]
        public string City { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContactPhone")]
        public string ContactPhone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ReferralCode")]
        public string ReferralCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SpotRegulator")]
        public string SpotRegulator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MarginRegulator")]
        public string MarginRegulator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentSystem")]
        public string PaymentSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Isp")]
        public string Isp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfPoaDocument")]
        public System.DateTime? DateOfPoaDocument { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Avatar")]
        public string Avatar { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Website")]
        public string Website { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShortBio")]
        public string ShortBio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Facebook")]
        public string Facebook { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Twitter")]
        public string Twitter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Github")]
        public string Github { get; set; }

    }
}
