// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CreatePrivateWalletModel
    {
        /// <summary>
        /// Initializes a new instance of the CreatePrivateWalletModel class.
        /// </summary>
        public CreatePrivateWalletModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreatePrivateWalletModel class.
        /// </summary>
        /// <param name="blockchain">Possible values include: 'None',
        /// 'Bitcoin', 'Ethereum'</param>
        public CreatePrivateWalletModel(string address = default(string), string name = default(string), string encodedPrivateKey = default(string), bool? isColdStorage = default(bool?), string blockchain = default(string), int? number = default(int?))
        {
            Address = address;
            Name = name;
            EncodedPrivateKey = encodedPrivateKey;
            IsColdStorage = isColdStorage;
            Blockchain = blockchain;
            Number = number;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EncodedPrivateKey")]
        public string EncodedPrivateKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsColdStorage")]
        public bool? IsColdStorage { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Bitcoin', 'Ethereum'
        /// </summary>
        [JsonProperty(PropertyName = "Blockchain")]
        public string Blockchain { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Number")]
        public int? Number { get; set; }

    }
}
