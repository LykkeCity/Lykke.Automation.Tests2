// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AssetPairDetailedRateModel
    {
        /// <summary>
        /// Initializes a new instance of the AssetPairDetailedRateModel class.
        /// </summary>
        public AssetPairDetailedRateModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AssetPairDetailedRateModel class.
        /// </summary>
        public AssetPairDetailedRateModel(double? pChange = default(double?), double? pChangeBid = default(double?), IList<double?> chngGrph = default(IList<double?>), IList<AskBid> askBidGraph = default(IList<AskBid>), bool? inverted = default(bool?))
        {
            PChange = pChange;
            PChangeBid = pChangeBid;
            ChngGrph = chngGrph;
            AskBidGraph = askBidGraph;
            Inverted = inverted;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PChange")]
        public double? PChange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PChangeBid")]
        public double? PChangeBid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChngGrph")]
        public IList<double?> ChngGrph { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AskBidGraph")]
        public IList<AskBid> AskBidGraph { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Inverted")]
        public bool? Inverted { get; set; }

    }
}
